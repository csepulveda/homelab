apiVersion: stackgres.io/v1beta1
kind: SGObjectStorage
metadata:
  name: backup-stackgres
  namespace: immich
spec:
  type: s3Compatible
  s3Compatible:
    bucket: stackgres
    enablePathStyleAddressing: true
    endpoint: http://minio.minio:9000
    awsCredentials:
      secretKeySelectors:
        accessKeyId:
          key: root-user
          name: minio
        secretAccessKey:
          key: root-password
          name: minio
---
apiVersion: stackgres.io/v1
kind: SGInstanceProfile
metadata:
  annotations:
  name: immich-db-2g
  namespace: immich
spec:
  cpu: "1"
  memory: 2Gi
  requests:
    cpu: "1"
    memory: 2Gi
---
apiVersion: stackgres.io/v1
kind: SGInstanceProfile
metadata:
  annotations:
  name: immich-db-4g-cpularge
  namespace: immich
spec:
  cpu: "5"
  memory: 4Gi
  requests:
    cpu: "5"
    memory: 4Gi
---
apiVersion: stackgres.io/v1
kind: SGPostgresConfig
metadata:
  name: immich-config-15
  namespace: immich
spec:
  postgresVersion: "15"
  postgresql.conf:
    shared_preload_libraries: "pg_stat_statements, auto_explain, vectors"
---
# apiVersion: stackgres.io/v1
# kind: SGCluster
# metadata:
#   name: immich-postgresql
#   namespace: immich
# spec:
#   instances: 2
#   postgres:
#     version: "15.12"
#     extensions:
#       - name: cube
#       - name: earthdistance
#       - name: vector
#       - name: uuid-ossp
#       - name: pg_trgm
#       - name: unaccent
#       - name: vectors
#         version: 0.3.0
#   configurations:
#     sgPostgresConfig: immich-config-15
#   sgInstanceProfile: immich-db-4g-cpularge
#   #sgInstanceProfile: immich-db-2g
#   pods:
#     persistentVolume: 
#       size: 20Gi
#       storageClass: longhorn
#     scheduling:
#       nodeAffinity:
#         requiredDuringSchedulingIgnoredDuringExecution:
#           nodeSelectorTerms:
#           - matchExpressions:
#             - key: feature.node.kubernetes.io/cpu-model.vendor_id
#               operator: NotIn
#               values:
#               - Qualcomm
#---
#apiVersion: stackgres.io/v1
#kind: SGPostgresConfig
#metadata:
#  name: immich-config-16-test
#  namespace: immich
#spec:
#  postgresVersion: "16"
#  postgresql.conf:
#    shared_preload_libraries: "pg_stat_statements, auto_explain, vchord, vectors"
#---
#apiVersion: stackgres.io/v1
#kind: SGCluster
#metadata:
#  name: immich-postgresql-vchord
#  namespace: immich
#spec:
#  instances: 2
#  postgres:
#    version: "16"
#    extensions:
#      - name: cube
#      - name: earthdistance
#      - name: vector
#      - name: uuid-ossp
#      - name: pg_trgm
#      - name: unaccent
#      - name: vchord
#      - name: vectors
#  configurations:
#    sgPostgresConfig: immich-config-16-test
#  sgInstanceProfile: immich-db-2g
#  #sgInstanceProfile: immich-db-4g-cpularge
#  pods:
#    persistentVolume: 
#      size: 10Gi
#      storageClass: longhorn
#    scheduling:
#      nodeAffinity:
#        requiredDuringSchedulingIgnoredDuringExecution:
#          nodeSelectorTerms:
#          - matchExpressions:
#            - key: feature.node.kubernetes.io/cpu-model.vendor_id
#              operator: NotIn
#              values:
#              - Qualcomm
# ---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-pg
  namespace: immich
spec:
  instances: 1
  storage:
    size: 20Gi
    storageClass: iscsi
  monitoring:
    enablePodMonitor: true
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:15-0.3.0
  postgresql:
    shared_preload_libraries:
      - "vchord.so"
  bootstrap:
    initdb:
      database: immich
      owner: immich
      dataChecksums: true
      postInitApplicationSQL:
        - ALTER USER immich WITH SUPERUSER;
        - CREATE EXTENSION IF NOT EXISTS vchord CASCADE;
        - CREATE EXTENSION IF NOT EXISTS "cube";
        - CREATE EXTENSION IF NOT EXISTS "earthdistance";
  resources:
    limits:
      cpu: '2'
      memory: 1Gi
    requests:
      cpu: 50m
      memory: 512Mi
